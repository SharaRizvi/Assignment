import com.sun.xml.internal.ws.util.StringUtils

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
//Q1-> Look up java plugin documentation. Make changes in manifest to make it executable with correct class.
// When run using java -jar JAR_NAME_HERE the output should be text "Hello World" on the console.
//run on console with java -jar path~/JavaSourceFile.jar
//check class in the path below

apply plugin:'java'

sourceSets{
    main{
        java{
            srcDirs=["source/main/java2"]
        }
    }
}

repositories {
    mavenCentral()
}
jar{
    manifest{
        attributes 'Main-Class': 'Java2File'
    }
}

//Q2look up idea plugin. make changes in build.gradle so that the sources of src/main/java as well as src/main/java2 are taken as sources.
//Ensure that when you make JAR file class files in both are added to the JAR. This will teach you how projects with non-conventional structure can be used with gradle.
//Check The two .java files in the two folders given below and check their class files compiled in build/classes/java/main

sourceSets{
    main{
        java{
            srcDirs=["source/main/java","source/main/java2"]
        }
    }
}

//Q3 add 2 files file1.xml and file1.txt in src/main/resources manually.
//make changes so that when creating jar only file1.xml is added to the jar.
//The two files are added in folder given below and check them in build/resources/main
sourceSets{
    main{
        resources {
            srcDirs=["source/main/resouces"]
            exclude "file1.txt"
        }
    }
}


//Q4find how to what is an uberjar. Make changes so you can use commons lang3 StringUtil in your jar.
// Make this uber jar executable. The output should be text but that should be using the StringUtils class of commons lang3
jar{
    manifest{
        attributes 'Main-Class': 'JavaSourceFile'
    }
}

repositories {
    mavenCentral()
}

jar{
    dependencies {
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    }
    from{
        configurations.compile.collect{it.isDirectory()?it:zipTree(it)}
    }
}



//Q5 Find a maven repository and add it as a repository. You can use bintray, jcenter
repositories {
    mavenCentral()
    maven {
        url "https://repository-achartengine.forge.cloudbees.com/snapshot/"
    }
}


//Q6 Write a task in file "mytasks.gradle" and use it in your build.gradle

//tasks of this file-->
task hello <<{
    println "Hello"
}
task greet <<{
    println "greet"
}
task intro(dependsOn:hello)<<{
    println "intro depends on gradle"
}
hello << {println "Hello extended!!"}
greet.dependsOn hello, intro




//Q7 Tasks from tasks.gradle--->
apply from: "tasks.gradle"